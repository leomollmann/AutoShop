/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;


import Communication.DataManager;
import static Communication.Engine.GetMarcaModelo;
import static Communication.Engine.GetRowSize;
import static Communication.Engine.GetSingleData;
import static Communication.Engine.MarcaModeloCBox;
import static Communication.Engine.ProductToTable;
import static Communication.Engine.RowToComboBox;
import static Communication.Engine.isNumeric;
import Communication.LabelTimer;
import javax.swing.JOptionPane;

/**
 *
 * @author LeoFuking
 */
public class ItemVenda extends javax.swing.JFrame {

    int venda_id = 0;
    Venda reference = null;
    private boolean echo = false;
    
    private int Marca = 0;
    private int Modelo = 0;
    private int Pintura = 0;
    private String Cor = "";
    
    public ItemVenda() {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ItemVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ItemVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ItemVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ItemVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        initComponents();
        salvo.setVisible(false);
        modelo.setModel(RowToComboBox("modelo", "nome"));
        pintura.setModel(RowToComboBox("pintura", "nome"));
        marca.setModel(RowToComboBox("marca", "nome"));
        ResetFrame();
    }
    
    private void ResetFrame(){
        modelo.setSelectedIndex(0);
        pintura.setSelectedIndex(0);
        marca.setSelectedIndex(0);
        quantidade.setText("1");
        valor.setText("0.00");
        cor.setText("");
        tabela.setModel(ProductToTable(0,0,"",0));
    }
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        sair = new javax.swing.JButton();
        salvar = new javax.swing.JButton();
        limpar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        valor = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        modelo = new javax.swing.JComboBox<>();
        pintura = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        marca = new javax.swing.JComboBox<>();
        cor = new javax.swing.JTextField();
        quantidade = new javax.swing.JFormattedTextField();
        salvo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Item", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Copperplate Gothic Light", 0, 14))); // NOI18N

        sair.setText("Sair");
        sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairActionPerformed(evt);
            }
        });

        salvar.setText("Salvar");
        salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarActionPerformed(evt);
            }
        });

        limpar.setText("Limpar");
        limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparActionPerformed(evt);
            }
        });

        jLabel1.setText("Cor");

        jLabel3.setText("Valor Total");

        valor.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        valor.setText("0.00");
        valor.setToolTipText("");

        jLabel4.setText("Quantidade");

        modelo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        modelo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                modeloItemStateChanged(evt);
            }
        });
        modelo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                modeloMousePressed(evt);
            }
        });
        modelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modeloActionPerformed(evt);
            }
        });

        pintura.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        pintura.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                pinturaItemStateChanged(evt);
            }
        });
        pintura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pinturaActionPerformed(evt);
            }
        });

        jLabel2.setText("Marca");

        jLabel5.setText("Modelo");

        jLabel6.setText("Pintura");

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabelaMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tabela);

        marca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        marca.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                marcaItemStateChanged(evt);
            }
        });
        marca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                marcaMousePressed(evt);
            }
        });

        cor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                corKeyReleased(evt);
            }
        });

        quantidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        quantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                quantidadeKeyReleased(evt);
            }
        });

        salvo.setForeground(new java.awt.Color(51, 204, 0));
        salvo.setText("Salvo com sucesso!");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(valor, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(salvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(limpar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sair)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(salvo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(marca, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(cor, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pintura, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(modelo, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 78, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(marca, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(modelo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cor, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pintura)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(valor))
                        .addGap(39, 39, 39))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(salvar)
                            .addComponent(limpar)
                            .addComponent(sair)
                            .addComponent(salvo)))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void modeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modeloActionPerformed

    }//GEN-LAST:event_modeloActionPerformed

    private void pinturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pinturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pinturaActionPerformed

    private void limparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparActionPerformed
        ResetFrame();
    }//GEN-LAST:event_limparActionPerformed

    private void salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarActionPerformed
        if(tabela.getSelectedRow() == -1){JOptionPane.showMessageDialog(null,"Selecione uma linha na tabela para salvar");}
        else{
            if(tabela.getValueAt(tabela.getSelectedRow(),0) == null){JOptionPane.showMessageDialog(null,"Selecione uma linha válida");}
            else{
                if(!isNumeric(quantidade.getText())){JOptionPane.showMessageDialog(null,"Digite um valor válido para quantidade");}
                else{
                    String[] save = new String[4];
                    save[0] = quantidade.getText();
                    save[1] = String.valueOf(venda_id);
                    save[2] = String.valueOf(tabela.getValueAt(tabela.getSelectedRow(),6));
                    save[3] = valor.getText();
                    int s1 = GetRowSize("itemvenda");
                    DataManager.CadastrarItemVenda(save);
                    int s2 = GetRowSize("itemvenda");
                    if(s2 > s1){salvo.setVisible(true);new LabelTimer(2,salvo);}
                    ResetFrame();
                    reference.Trigger();
                }
            }
        }
    }//GEN-LAST:event_salvarActionPerformed

    private void sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairActionPerformed
        dispose();
    }//GEN-LAST:event_sairActionPerformed

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked

    }//GEN-LAST:event_tabelaMouseClicked

    private void marcaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_marcaItemStateChanged
        if(echo) echo = false;
        else{
            echo = true;
            if(marca.getSelectedItem() == ""){
                modelo.setModel(RowToComboBox("modelo", "nome"));
                Marca = 0;
                Modelo = 0;
                tabela.setModel(ProductToTable(Marca,Modelo,Cor,Pintura));
            }else{
                Marca = (int) GetSingleData("SELECT marca_id FROM marca WHERE nome LIKE '"+marca.getSelectedItem()+"'","marca_id");
                tabela.setModel(ProductToTable(Marca,Modelo,Cor,Pintura));
                modelo.setModel(MarcaModeloCBox(true,String.valueOf(Marca)));
            }
        }
    }//GEN-LAST:event_marcaItemStateChanged

    private void modeloItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_modeloItemStateChanged
    if(echo) echo = false;
    else{
        echo = true;
        if(modelo.getSelectedItem() == ""){
            marca.setModel(RowToComboBox("marca", "nome"));
            Modelo = 0;
            tabela.setModel(ProductToTable(Marca,Modelo,Cor,Pintura));
        }else{
            Modelo = (int) GetSingleData("SELECT modelo_id FROM modelo WHERE nome LIKE '"+modelo.getSelectedItem()+"'","modelo_id");
            tabela.setModel(ProductToTable(Marca,Modelo,Cor,Pintura));
            String buffer = String.valueOf(modelo.getSelectedItem());
            String[] s = new String[1];
            s = GetMarcaModelo(false,String.valueOf(modelo.getSelectedItem()));
            marca.setSelectedItem(s[0]);
            modelo.setSelectedItem(buffer);
        }
    }
    }//GEN-LAST:event_modeloItemStateChanged

    private void pinturaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_pinturaItemStateChanged
        if(pintura.getSelectedItem() == ""){
            Pintura = 0;
            tabela.setModel(ProductToTable(Marca,Modelo,Cor,Pintura));
        }else{
            Pintura = (int) GetSingleData("SELECT pintura_id FROM pintura WHERE nome LIKE '"+pintura.getSelectedItem()+"'","pintura_id");
            tabela.setModel(ProductToTable(Marca,Modelo,Cor,Pintura));
        }
    }//GEN-LAST:event_pinturaItemStateChanged

    private void corKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_corKeyReleased
    if(cor.getText() != null){
            Cor = cor.getText();
            tabela.setModel(ProductToTable(Marca,Modelo,Cor,Pintura));
        }
    }//GEN-LAST:event_corKeyReleased

    private void tabelaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseReleased
        if(tabela.getSelectedRow() != -1){
        if(tabela.getSelectedRowCount() > 1){
            int[] i = tabela.getSelectedRows();
            tabela.setRowSelectionInterval(i[0],i[0]);
        }
        if(tabela.getSelectedRow() < tabela.getRowCount()){
            float a = Float.parseFloat(String.valueOf(tabela.getValueAt(tabela.getSelectedRow(),5)));
            int b = Integer.parseInt(quantidade.getText());
            valor.setText(String.valueOf(a*b));
        }
        }
    }//GEN-LAST:event_tabelaMouseReleased

    private void quantidadeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantidadeKeyReleased
        if(tabela.getSelectedRow() == -1);
        else{
            float a = Float.parseFloat(String.valueOf(tabela.getValueAt(tabela.getSelectedRow(),5)));
            int b = Integer.parseInt(quantidade.getText());
            valor.setText(String.valueOf(a*b));
        }
    }//GEN-LAST:event_quantidadeKeyReleased

    private void marcaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_marcaMousePressed
        echo = false;
    }//GEN-LAST:event_marcaMousePressed

    private void modeloMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modeloMousePressed
        echo = false;
    }//GEN-LAST:event_modeloMousePressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton limpar;
    private javax.swing.JComboBox<String> marca;
    private javax.swing.JComboBox<String> modelo;
    private javax.swing.JComboBox<String> pintura;
    private javax.swing.JFormattedTextField quantidade;
    private javax.swing.JButton sair;
    private javax.swing.JButton salvar;
    private javax.swing.JLabel salvo;
    private javax.swing.JTable tabela;
    private javax.swing.JLabel valor;
    // End of variables declaration//GEN-END:variables
}
