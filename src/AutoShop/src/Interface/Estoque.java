/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import static Communication.Engine.ExecuteComand;
import static Communication.Engine.GetMarcaModelo;
import static Communication.Engine.GetSingleData;
import static Communication.Engine.MarcaModeloCBox;
import static Communication.Engine.ProductToTable;
import static Communication.Engine.RowToComboBox;
import static Communication.Engine.isNumeric;
import javax.swing.JOptionPane;

/**
 *
 * @author LeoFuking
 */
public class Estoque extends javax.swing.JPanel {
    private boolean echo = false;
    int permissao = 0;
    
    private int Marca = 0;
    private int Modelo = 0;
    private int Pintura = 0;
    private String Cor = "";

    public Estoque(int permissao) {
        this.permissao = permissao;
        initComponents();
        modelo.setModel(RowToComboBox("modelo", "nome"));
        pintura.setModel(RowToComboBox("pintura", "nome"));
        marca.setModel(RowToComboBox("marca", "nome"));
        ResetFrame();
    }
    
    private void ResetFrame(){
        modelo.setSelectedIndex(0);
        pintura.setSelectedIndex(0);
        marca.setSelectedIndex(0);
        quantidade.setText("");
        valor.setText("");
        cor.setText("");
        tabela.setModel(ProductToTable(0,0,"",0));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        marca = new javax.swing.JComboBox<>();
        cor = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        quantidade = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        adicionar = new javax.swing.JButton();
        modelo = new javax.swing.JComboBox<>();
        remover = new javax.swing.JButton();
        pintura = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        valor = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        confirmar = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Estoque", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Copperplate Gothic Light", 0, 14))); // NOI18N

        jLabel5.setText("Modelo");

        jLabel6.setText("Pintura");

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabelaMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tabela);

        marca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        marca.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                marcaItemStateChanged(evt);
            }
        });
        marca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                marcaMousePressed(evt);
            }
        });

        cor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                corKeyReleased(evt);
            }
        });

        jLabel1.setText("Cor");

        quantidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        quantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                quantidadeKeyReleased(evt);
            }
        });

        jLabel4.setText("Quantidade");

        adicionar.setText("Adicionar");
        adicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarActionPerformed(evt);
            }
        });

        modelo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        modelo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                modeloItemStateChanged(evt);
            }
        });
        modelo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                modeloMousePressed(evt);
            }
        });

        remover.setText("Remover");
        remover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerActionPerformed(evt);
            }
        });

        pintura.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        pintura.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                pinturaItemStateChanged(evt);
            }
        });

        jLabel2.setText("Marca");

        valor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        valor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                valorKeyReleased(evt);
            }
        });

        jLabel3.setText("Valor");

        confirmar.setText("Confirmar");
        confirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(marca, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(cor, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pintura, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(modelo, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 324, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(adicionar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(remover)
                .addGap(75, 75, 75)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(valor, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(confirmar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(marca, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(modelo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cor, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pintura)))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(adicionar)
                    .addComponent(remover)
                    .addComponent(valor, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(confirmar))
                .addGap(25, 25, 25))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tabelaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseReleased
        if(tabela.getSelectedRow() != -1){
        if(tabela.getSelectedRowCount() > 1){
            int[] i = tabela.getSelectedRows();
            tabela.setRowSelectionInterval(i[0],i[0]);
        }
        if(tabela.getSelectedRow() < tabela.getRowCount()){
            float a = Float.parseFloat(String.valueOf(tabela.getValueAt(tabela.getSelectedRow(),5)));
            valor.setText(String.valueOf(a));
        }
        }
    }//GEN-LAST:event_tabelaMouseReleased

    private void marcaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_marcaItemStateChanged
        if(echo) echo = false;
        else{
            echo = true;
            if(marca.getSelectedItem() == ""){
                modelo.setModel(RowToComboBox("modelo", "nome"));
                Marca = 0;
                Modelo = 0;
                tabela.setModel(ProductToTable(Marca,Modelo,Cor,Pintura));
            }else{
                Marca = (int) GetSingleData("SELECT marca_id FROM marca WHERE nome LIKE '"+marca.getSelectedItem()+"'","marca_id");
                tabela.setModel(ProductToTable(Marca,Modelo,Cor,Pintura));
                modelo.setModel(MarcaModeloCBox(true,String.valueOf(Marca)));
            }
        }
    }//GEN-LAST:event_marcaItemStateChanged

    private void corKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_corKeyReleased
     if(cor.getText() != null){
            Cor = cor.getText();
            tabela.setModel(ProductToTable(Marca,Modelo,Cor,Pintura));
        }
    }//GEN-LAST:event_corKeyReleased

    private void quantidadeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantidadeKeyReleased

    }//GEN-LAST:event_quantidadeKeyReleased

    private void adicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarActionPerformed
        if(permissao > 1){
        if(tabela.getSelectedRow() == -1){JOptionPane.showMessageDialog(null,"Selecione uma linha na tabela para salvar");}
        else{
            if(tabela.getValueAt(tabela.getSelectedRow(),0) == null){JOptionPane.showMessageDialog(null,"Selecione uma linha válida");}
            else{
                if(!isNumeric(quantidade.getText())){JOptionPane.showMessageDialog(null,"Digite um valor válido para quantidade");}
                else{
                    int selected = tabela.getSelectedRow();
                    ExecuteComand("UPDATE produto SET quantidade = quantidade + "+quantidade.getText()+" WHERE produto_id = "+tabela.getValueAt(tabela.getSelectedRow(),6));
                    tabela.setModel(ProductToTable(Marca,Modelo,Cor,Pintura));
                    tabela.setRowSelectionInterval(selected, selected);
                }
            }
        }
        }else{JOptionPane.showMessageDialog(null, "Permissão negada");}
    }//GEN-LAST:event_adicionarActionPerformed

    private void modeloItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_modeloItemStateChanged
    if(echo) echo = false;
    else{
        echo = true;
        if(modelo.getSelectedItem() == ""){
            marca.setModel(RowToComboBox("marca", "nome"));
            Modelo = 0;
            tabela.setModel(ProductToTable(Marca,Modelo,Cor,Pintura));
        }else{
            Modelo = (int) GetSingleData("SELECT modelo_id FROM modelo WHERE nome LIKE '"+modelo.getSelectedItem()+"'","modelo_id");
            tabela.setModel(ProductToTable(Marca,Modelo,Cor,Pintura));
            String buffer = String.valueOf(modelo.getSelectedItem());
            String[] s = new String[1];
            s = GetMarcaModelo(false,String.valueOf(modelo.getSelectedItem()));
            marca.setSelectedItem(s[0]);
            modelo.setSelectedItem(buffer);
        }
    }
    }//GEN-LAST:event_modeloItemStateChanged

    private void removerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerActionPerformed
        if(permissao > 1){
        if(tabela.getSelectedRow() == -1){JOptionPane.showMessageDialog(null,"Selecione uma linha na tabela para salvar");}
        else{
            if(tabela.getValueAt(tabela.getSelectedRow(),0) == null){JOptionPane.showMessageDialog(null,"Selecione uma linha válida");}
            else{
                if(!isNumeric(quantidade.getText())){JOptionPane.showMessageDialog(null,"Digite um valor válido para quantidade");}
                else{
                    int selected = tabela.getSelectedRow();
                    ExecuteComand("UPDATE produto SET quantidade = quantidade - "+quantidade.getText()+" WHERE produto_id = "+tabela.getValueAt(tabela.getSelectedRow(),6));
                    tabela.setModel(ProductToTable(Marca,Modelo,Cor,Pintura));
                    tabela.setRowSelectionInterval(selected, selected);
                }
            }
        }
        }else{JOptionPane.showMessageDialog(null, "Permissão negada");}
    }//GEN-LAST:event_removerActionPerformed

    private void pinturaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_pinturaItemStateChanged
        if(pintura.getSelectedItem() == ""){
            Pintura = 0;
            tabela.setModel(ProductToTable(Marca,Modelo,Cor,Pintura));
        }else{
            Pintura = (int) GetSingleData("SELECT pintura_id FROM pintura WHERE nome LIKE '"+pintura.getSelectedItem()+"'","pintura_id");
            tabela.setModel(ProductToTable(Marca,Modelo,Cor,Pintura));
        }
    }//GEN-LAST:event_pinturaItemStateChanged

    private void valorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_valorKeyReleased

    private void marcaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_marcaMousePressed
        echo = false;
    }//GEN-LAST:event_marcaMousePressed

    private void modeloMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modeloMousePressed
        echo = false;
    }//GEN-LAST:event_modeloMousePressed

    private void confirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmarActionPerformed
        if(permissao > 1){
        if(tabela.getSelectedRow() == -1){JOptionPane.showMessageDialog(null,"Selecione uma linha na tabela para salvar");}
        else{
            if(tabela.getValueAt(tabela.getSelectedRow(),0) == null){JOptionPane.showMessageDialog(null,"Selecione uma linha válida");}
            else{
                if(!isNumeric(quantidade.getText())){JOptionPane.showMessageDialog(null,"Digite um valor válido para quantidade");}
                else{
                    int selected = tabela.getSelectedRow();
                    ExecuteComand("UPDATE produto SET valor = "+valor.getText()+" WHERE produto_id = "+tabela.getValueAt(tabela.getSelectedRow(),6));
                    tabela.setModel(ProductToTable(Marca,Modelo,Cor,Pintura));
                    tabela.setRowSelectionInterval(selected, selected);
                }
            }
        }
    }else{JOptionPane.showMessageDialog(null, "Permissão negada");}
    }//GEN-LAST:event_confirmarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adicionar;
    private javax.swing.JButton confirmar;
    private javax.swing.JTextField cor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> marca;
    private javax.swing.JComboBox<String> modelo;
    private javax.swing.JComboBox<String> pintura;
    private javax.swing.JFormattedTextField quantidade;
    private javax.swing.JButton remover;
    private javax.swing.JTable tabela;
    private javax.swing.JFormattedTextField valor;
    // End of variables declaration//GEN-END:variables
}
