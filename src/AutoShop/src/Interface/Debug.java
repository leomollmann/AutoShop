/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import static Communication.Engine.ColorToTable;
import static Communication.Engine.GetMarcaModelo;
import static Communication.Engine.GetSingleData;
import static Communication.Engine.MarcaModeloCBox;
import static Communication.Engine.RowToComboBox;
import java.awt.Color;


/**
 *
 * @author LeoFuking
 */
public class Debug extends javax.swing.JPanel {
    
    private boolean echo = false;
    
    private int Marca = 0;
    private int Modelo = 0;
    private int Pintura = 0;
    private int Cor = 0;
    
    public Debug() {
        initComponents();
        string.setText("INSERT INTO produto (marca_id, modelo_id, cor_id, pintura_id, valor, quantidade, codigo) VALUES \n");
        modelo.setModel(RowToComboBox("modelo", "nome"));
        pintura.setModel(RowToComboBox("pintura", "nome"));
        marca.setModel(RowToComboBox("marca", "nome"));
        ResetFrame();
    }

    private void ResetFrame(){
        tabela.setModel(ColorToTable(""));
        valor.setText("0.00");
        quantidade.setText("0");
        marca.setSelectedIndex(0);
        modelo.setSelectedIndex(0);
        pintura.setSelectedIndex(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gerar = new javax.swing.JButton();
        cor = new javax.swing.JTextField();
        marca = new javax.swing.JComboBox<>();
        modelo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        pintura = new javax.swing.JComboBox<>();
        valor = new javax.swing.JTextField();
        quantidade = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        string = new javax.swing.JTextArea();
        limpar1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        showcolor = new javax.swing.JPanel();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gerar produto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Copperplate Gothic Light", 0, 14))); // NOI18N

        gerar.setText("Gerar");
        gerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gerarActionPerformed(evt);
            }
        });

        cor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                corKeyReleased(evt);
            }
        });

        marca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        marca.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                marcaItemStateChanged(evt);
            }
        });
        marca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                marcaMouseReleased(evt);
            }
        });

        modelo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        modelo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                modeloItemStateChanged(evt);
            }
        });
        modelo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                modeloMouseReleased(evt);
            }
        });

        jLabel1.setText("Cor");

        pintura.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        pintura.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                pinturaItemStateChanged(evt);
            }
        });

        string.setColumns(20);
        string.setRows(5);
        jScrollPane1.setViewportView(string);

        limpar1.setText("Limpar");

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabelaMouseReleased(evt);
            }
        });
        jScrollPane4.setViewportView(tabela);

        jLabel4.setText("Marca");

        jLabel5.setText("Modelo");

        jLabel6.setText("Pintura");

        jLabel8.setText("Valor");

        jLabel10.setText("Quantidade");

        showcolor.setBackground(new java.awt.Color(255, 255, 255));
        showcolor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout showcolorLayout = new javax.swing.GroupLayout(showcolor);
        showcolor.setLayout(showcolorLayout);
        showcolorLayout.setHorizontalGroup(
            showcolorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 65, Short.MAX_VALUE)
        );
        showcolorLayout.setVerticalGroup(
            showcolorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 62, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(valor, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pintura, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(marca, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(modelo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(quantidade, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cor, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showcolor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(gerar, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(limpar1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gerar)
                            .addComponent(limpar1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cor, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(marca, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(modelo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)))
                            .addComponent(showcolor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pintura, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(valor, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10))
                                .addGap(110, 110, 110)))))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void gerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gerarActionPerformed
        String codigo = String.valueOf(Marca);
        if(Modelo < 10)codigo +="0";
        codigo += String.valueOf(Modelo);
        if(Cor < 100)codigo +="0";
        if(Cor < 10)codigo +="0";
        codigo += String.valueOf(Cor);
        codigo += String.valueOf(Pintura);
        codigo += "0";
        string.setText(string.getText()+"(\""+Marca+"\",\""+Modelo+"\",\""+Cor+"\",\""+
        Pintura+"\",\""+valor.getText()+"\",\""+quantidade.getText()+"\",\""+codigo+"\"),\n");
    }//GEN-LAST:event_gerarActionPerformed

    private void corKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_corKeyReleased
        tabela.setModel(ColorToTable(cor.getText()));
    }//GEN-LAST:event_corKeyReleased

    private void marcaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_marcaItemStateChanged
        if(echo) echo = false;
        else{
            echo = true;
            if(marca.getSelectedItem() == ""){
                modelo.setModel(RowToComboBox("modelo", "nome"));
            }else{
                Marca = (int) GetSingleData("SELECT marca_id FROM marca WHERE nome LIKE '"+marca.getSelectedItem()+"'","marca_id");
                modelo.setModel(MarcaModeloCBox(true,String.valueOf(Marca)));
            }
        }
    }//GEN-LAST:event_marcaItemStateChanged

    private void marcaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_marcaMouseReleased
        echo = false;
    }//GEN-LAST:event_marcaMouseReleased

    private void modeloItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_modeloItemStateChanged
        if(echo) echo = false;
        else{
            echo = true;
            if(modelo.getSelectedItem() == ""){
                marca.setModel(RowToComboBox("marca", "nome"));
            }else{
                Modelo = (int) GetSingleData("SELECT modelo_id FROM modelo WHERE nome LIKE '"+modelo.getSelectedItem()+"'","modelo_id");
                String buffer = String.valueOf(modelo.getSelectedItem());
                String[] s = new String[1];
                s = GetMarcaModelo(false,String.valueOf(modelo.getSelectedItem()));
                marca.setSelectedItem(s[0]);
                modelo.setSelectedItem(buffer);
            }
        }
    }//GEN-LAST:event_modeloItemStateChanged

    private void modeloMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modeloMouseReleased
        echo = false;
    }//GEN-LAST:event_modeloMouseReleased

    private void pinturaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_pinturaItemStateChanged
        Pintura = (int) GetSingleData("SELECT pintura_id FROM pintura WHERE nome LIKE '"+pintura.getSelectedItem()+"'","pintura_id");
    }//GEN-LAST:event_pinturaItemStateChanged

    private void tabelaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseReleased
        if(tabela.getSelectedRow() != -1){
            if(tabela.getSelectedRowCount() > 1){
                int[] i = tabela.getSelectedRows();
                tabela.setRowSelectionInterval(i[0],i[0]);
            }
            if(tabela.getSelectedRow() < tabela.getRowCount()){
            Cor = (int) GetSingleData("SELECT cor_id FROM cor WHERE nome LIKE '"+String.valueOf(tabela.getValueAt(tabela.getSelectedRow(),0))+"'","cor_id");
            showcolor.setBackground(Color.decode((String)tabela.getValueAt(tabela.getSelectedRow(),1)));
            }
        }
    }//GEN-LAST:event_tabelaMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cor;
    private javax.swing.JPanel display;
    private javax.swing.JPanel display1;
    private javax.swing.JButton gerar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton limpar1;
    private javax.swing.JComboBox<String> marca;
    private javax.swing.JComboBox<String> modelo;
    private javax.swing.JComboBox<String> pintura;
    private javax.swing.JTextField quantidade;
    private javax.swing.JPanel showcolor;
    private javax.swing.JTextArea string;
    private javax.swing.JTable tabela;
    private javax.swing.JTextField valor;
    // End of variables declaration//GEN-END:variables
}
